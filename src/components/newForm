import View from "../View";
import addTask from "./addTodo";

export default function (projects, handleNewTodo) {
  const form = View.createElement("form");
  form.setAttribute("id", "newForm");
  const formContent = View.createElement("div", "form-content");

  form.append(formContent, btns(projects, handleNewTodo));
  formContent.append(...textInputs(), btnInputs(projects));
  return form;
}

const textInputs = () => {
  const name = nameField();
  const description = descriptionField();
  return [name, description];
};

const btns = (projects, handleAddTodo) => {
  const btnContainer = View.createElement("div", "btn-container");

  const addBtn = View.createElement("button", "primary-btn");
  addBtn.classList.add("button");
  addBtn.disabled = true;
  addBtn.textContent = "Add Task";
  addBtn.addEventListener("click", () => {
    event.preventDefault();
    const form = document.getElementById("newForm");
    const newTodo = {};
    [...form.elements].forEach((element) => {
      if (element.id) newTodo[element.id] = element.value;
      if (element.id === "project" && element.value === "inbox") {
        newTodo[element.id] = "";
      }
    });
    handleAddTodo(newTodo);
  });

  const cancelBtn = View.createElement("button", "secondary-btn");

  cancelBtn.addEventListener("click", () => {
    cancelHandler(projects);
  });
  cancelBtn.classList.add("button");
  cancelBtn.textContent = "Cancel";

  btnContainer.append(addBtn, cancelBtn);

  return btnContainer;
};

const cancelHandler = (projects) => {
  event.preventDefault();
  const form = document.getElementById("newForm");
  form.replaceWith(addTask(projects));
};

const nameField = () => {
  const nameField = View.createElement("div", "input-container");

  const labelName = View.createElement("label");
  labelName.setAttribute("for", "name");
  labelName.textContent = "Task Name";

  const inputName = View.createElement("input");
  inputName.setAttribute("id", "name");
  inputName.setAttribute("placeholder", "eg. Take out the garbage by 10am");
  inputName.addEventListener("keyup", enableSubmit);

  nameField.append(labelName, inputName);
  return nameField;
};

const descriptionField = () => {
  const descriptionField = View.createElement("div", "input-container");

  const descriptionName = View.createElement("label");
  descriptionName.setAttribute("for", "description");
  descriptionName.textContent = "Task Description";

  const descriptionInput = View.createElement("textarea");
  descriptionInput.setAttribute("id", "description");
  descriptionInput.setAttribute("placeholder", "Description");

  descriptionField.append(descriptionName, descriptionInput);
  return descriptionField;
};

const btnInputs = (projects) => {
  const btnContainer = View.createElement("div", "btn-inputs-container");

  const dateInput = View.createElement("input", "button");
  dateInput.setAttribute("id", "date");
  dateInput.setAttribute("type", "date");

  const projectOptions = projectDropDown(projects);

  btnContainer.append(dateInput, projectOptions);

  return btnContainer;
};

const enableSubmit = (event) => {
  const submitBtn = document.querySelector(".primary-btn");
  if (event.target.value != "") {
    submitBtn.disabled = false;
  } else {
    submitBtn.disabled = true;
  }
};

const projectDropDown = (projects) => {
  const dropdown = View.createElement("select", "button");
  dropdown.setAttribute("id", "project");
  let list = projects;

  if (!projects) {
    list = ["inbox"];
  } else {
    list.unshift("inbox");
  }

  list.forEach((project) => {
    const listItem = document.createElement("option");
    listItem.textContent = project;
    listItem.value = project;
    dropdown.appendChild(listItem);
  });

  return dropdown;
};
